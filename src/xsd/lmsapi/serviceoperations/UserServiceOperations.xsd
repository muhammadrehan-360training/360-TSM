<?xml version="1.0" encoding="UTF-8"?>
<!-- Chameleon Namespace Design:
		This design approach says to give the "main" schema a targetNamespace, and the "supporting" schemas have no targetNamespace.
		There are two things to note about this design approach:

		First, a schema is able to access components in schemas that have no targetNamespace, using <include>. The User schema uses
		the components in Address.xsd (and have no targetNamespace).

		Second, note the chameleon-like characteristics of schemas with no targetNamespace:

    	The components in the schemas with no targetNamespace get namespace-coerced. That is, the components "take-on" the 
    	targetNamespace of the schema that is doing the <include>
        For example, Address in Address.xsd gets implicitly coerced into the User targetNamespace. This is the reason that the 
        Address element was able to reference Adress defined in Address.xsd in the default namespace using type="Address".

		"Chameleon effect" ... This is a term coined by Henry Thompson to describe the ability of components in a schema with no 
		targetNamespace to take-on the namespace of other schemas. This is powerful!
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://user.serviceoperations.lmsapi.message.webservice.lms.vu360.softech.com"
	xmlns="http://user.serviceoperations.lmsapi.message.webservice.lms.vu360.softech.com"
	xmlns:usr="http://user.types.lmsapi.message.webservice.lms.vu360.softech.com"
	xmlns:tr="http://transactionresult.types.lmsapi.message.webservice.lms.vu360.softech.com"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<!--
		<xsd:import namespace="http://transactionresult.types.lmsapi.message.webservice.lms.vu360.softech.com" schemaLocation="../types/TransactionResultType.xsd"/>
		<xsd:import namespace="http://user.types.lmsapi.message.webservice.lms.vu360.softech.com" schemaLocation="../types/User.xsd"/>	
	-->
    
    <xsd:import namespace="http://transactionresult.types.lmsapi.message.webservice.lms.vu360.softech.com" schemaLocation="TransactionResultType.xsd"/>
	<xsd:import namespace="http://user.types.lmsapi.message.webservice.lms.vu360.softech.com" schemaLocation="User.xsd"/>
    
	<xsd:element name="AddUserRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Users" type="usr:Users" minOccurs="1"
					maxOccurs="1" nillable="false" />
			</xsd:sequence>
			<xsd:attribute name="customerCode" type="xsd:string"
				use="required" />
			<xsd:attribute name="key" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="AddUserResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="RegisterUsers"
					type="usr:RegisterUsers" minOccurs="0" maxOccurs="1"
					nillable="false" />
			</xsd:sequence>
			<xsd:attribute name="transactionResult"
				type="tr:TransactionResultType" use="required" />
			<xsd:attribute name="transactionResultMessage"
				type="xsd:string" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="AddUserLmsOnlyRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Users" type="usr:Users" minOccurs="1"
					maxOccurs="1" nillable="false" />
			</xsd:sequence>
			<xsd:attribute name="customerCode" type="xsd:string"
				use="required" />
			<xsd:attribute name="key" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="AddUserLmsOnlyResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="RegisterUsers"
					type="usr:RegisterUsers" minOccurs="0" maxOccurs="1"
					nillable="false" />
			</xsd:sequence>
			<xsd:attribute name="transactionResult"
				type="tr:TransactionResultType" use="required" />
			<xsd:attribute name="transactionResultMessage"
				type="xsd:string" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="UpdateUserRequest">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Users" type="usr:UpdateableUsers"
					minOccurs="1" maxOccurs="1" nillable="false" />
			</xsd:sequence>
			<xsd:attribute name="customerCode" type="xsd:string"
				use="required" />
			<xsd:attribute name="key" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="UpdateUserResponse">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="RegisterUsers"
					type="usr:RegisterUsers" minOccurs="0" maxOccurs="1"
					nillable="false" />
			</xsd:sequence>
			<xsd:attribute name="transactionResult"
				type="tr:TransactionResultType" use="required" />
			<xsd:attribute name="transactionResultMessage"
				type="xsd:string" />
		</xsd:complexType>
	</xsd:element>

</xsd:schema>