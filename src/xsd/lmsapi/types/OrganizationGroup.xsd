<?xml version="1.0" encoding="UTF-8"?>
<!-- Chameleon Namespace Design:
		This design approach says to give the "main" schema a targetNamespace, and the "supporting" schemas have no targetNamespace.
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://orggroup.types.lmsapi.message.webservice.lms.vu360.softech.com"
	xmlns="http://orggroup.types.lmsapi.message.webservice.lms.vu360.softech.com" 
	elementFormDefault="qualified"
	attributeFormDefault="unqualified">
	
	 
	<xsd:include schemaLocation="../utility/OrgGroupUtility.xsd"/>
	<!--
	<xsd:include schemaLocation="/schemas/lmsapi/utility/OrgGroupUtility.xsd"/>
	 -->
	<xsd:complexType name="OrganizationalGroups">  
    	<xsd:sequence>  
        	 <xsd:element name="OrgGroupHierarchy" type="xsd:string" minOccurs="1" maxOccurs="unbounded" />
    	</xsd:sequence>  
	</xsd:complexType>
	
	 <xsd:complexType name="AssignedOrganizationalGroups">  
    	<xsd:sequence>  
        	 <xsd:element name="OrgGroupHierarchy" type="xsd:string" minOccurs="1" maxOccurs="unbounded" />
    	</xsd:sequence> 
	</xsd:complexType>
	
	<xsd:complexType name="UnassignedOrganizationalGroups">
  		<xsd:sequence>  
    		<xsd:element name="InvalidOrganizationalGroup" type="valueWithError" minOccurs="1" maxOccurs="unbounded">
    		</xsd:element>
 	 	</xsd:sequence> 
	</xsd:complexType>
	
	<xsd:element name="RegisterOrganizationalGroups" type="RegisterOrganizationalGroups"/>  
    <xsd:complexType name="RegisterOrganizationalGroups">  
    	<xsd:sequence>  
        	 <xsd:element name="RegisterOrganizationalGroup" type="RegisterOrganizationalGroup" minOccurs="1" maxOccurs="unbounded" />
    	</xsd:sequence> 
	</xsd:complexType>
	
	<xsd:element name="RegisterOrganizationalGroup" type="RegisterOrganizationalGroup"/>  
    <xsd:complexType name="RegisterOrganizationalGroup">  
    	<xsd:sequence>  
        	 <xsd:element name="OrgGroupHierarchy" type="xsd:string" minOccurs="1" maxOccurs="1" />
    	</xsd:sequence> 
    	<xsd:attribute name="errorCode" type="xsd:string" />
	    <xsd:attribute name="errorMessage" type="xsd:string" /> 
	</xsd:complexType>
	
	<!-- manage org group types -->
	
	<xsd:complexType name="OrgGroup">
    	<xsd:sequence>  
        	 <xsd:element name="Name" type="xsd:string" minOccurs="1" maxOccurs="unbounded" />
    	</xsd:sequence>  
	</xsd:complexType>
	
	<xsd:complexType name="NewOrganizationalGroups">  
    	<xsd:sequence>  
        	<xsd:element name="NewOrganizationalGroup" type="ResponseOrganizationalGroup" minOccurs="1" maxOccurs="unbounded" nillable="false" />
    	</xsd:sequence>  
	</xsd:complexType>
	
    <xsd:complexType name="ResponseOrganizationalGroup">  
    	<xsd:sequence>  
        	<xsd:element name="Id" type="xsd:integer" minOccurs="0"  />
        	<xsd:element name="Name" type="xsd:string" minOccurs="0" />
        	<xsd:element name="ParentOrgGroupHierarchy" type="xsd:string" minOccurs="0" />
            <xsd:element name="ParentId" type="xsd:integer" minOccurs="0"  />
    	</xsd:sequence>
    	<xsd:attribute name="errorCode" type="xsd:string" use="required"/>
	   <xsd:attribute name="errorMessage" type="xsd:string"/>   
	</xsd:complexType>
	
	<xsd:complexType name="DeletedOrganizationalGroup">  
    	<xsd:sequence>  
        	<xsd:element name="Id" type="xsd:integer" minOccurs="0" maxOccurs="unbounded" />
    	</xsd:sequence>
    	<xsd:attribute name="errorCode" type="xsd:string" use="required"/>
	   <xsd:attribute name="errorMessage" type="xsd:string"/>   
	</xsd:complexType>
	
	<xsd:complexType name="AddOrgGroupByParentIdOrganizationalGroups">  
    	<xsd:sequence>  
        	<xsd:element name="OrganizationalGroup" type="AddOrgGroupByParentIdOrganizationalGroup" minOccurs="1" maxOccurs="unbounded"  />
    	</xsd:sequence>  
	</xsd:complexType>
	
	<xsd:complexType name="AddOrgGroupByParentIdOrganizationalGroup">  
    	<xsd:sequence>  
        	<xsd:element name="ParentId" type="xsd:integer" minOccurs="1"  />
            <xsd:element name="OrgGroupName" type="xsd:string" minOccurs="1" />
    	</xsd:sequence>  
	</xsd:complexType>
	
	<xsd:complexType name="UpdateOrganizationalGroup">  
    	<xsd:sequence>  
        	<xsd:element name="Id" type="xsd:integer" minOccurs="0"  />
            <xsd:element name="NewOrgGroupName" type="xsd:string" minOccurs="0" />
    	</xsd:sequence> 
	</xsd:complexType>
	
	<xsd:complexType name="DeleteOrganizationGroups">  
    	<xsd:sequence>  
        	<xsd:element name="Id" type="xsd:integer" minOccurs="1" maxOccurs="unbounded"  />
    	</xsd:sequence>  
	</xsd:complexType>
	
	<xsd:complexType name="InvalidOrganizationalGroups">
  		<xsd:sequence>  
    		<xsd:element name="InvalidOrganizationalGroup" type="invalidOrgGroupValueWithError" minOccurs="1" maxOccurs="unbounded" />
 	 	</xsd:sequence> 
 	 	<xsd:attribute name="errorCode" type="xsd:string" use="required"/>
	</xsd:complexType>

	<xsd:complexType name="GetOrgGroupById">  
    	<xsd:sequence>  
        	<xsd:element name="Id" type="xsd:integer" minOccurs="1" maxOccurs="1"  />
    	</xsd:sequence>  
	</xsd:complexType>
	
	<xsd:complexType name="GetOrgGroupIdByName">  
    	<xsd:sequence>
    	    <xsd:element name="ParentOrgGroupHierarchy" type="xsd:string" minOccurs="1" />  
        	<xsd:element name="Name" type="xsd:string" minOccurs="1" maxOccurs="1"  />
    	</xsd:sequence>  
	</xsd:complexType>
	
</xsd:schema>